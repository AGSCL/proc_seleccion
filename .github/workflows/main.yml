on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * MON' # Every Monday at 00:00

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        r-version: [4.1.2]
    permissions:
      contents: write
      issues: write
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Download JAGS installer #https://stackoverflow.com/questions/77948727/curl-under-windows-server-2022-uses-unix-certificate-store-when-called-in-github 
        shell: cmd
        run: |
          curl -o wjags.exe -L "https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Windows/JAGS-4.3.0.exe"
      - name: Install JAGS #https://github.com/iamazeem/test/blob/main/.github/workflows/ci-win-curl-jags.yml
        shell: cmd
        run: |
          wjags.exe /S
      
      - name: Clean up downloaded installer
        run: |
          del wjags.exe
          
      - name: Recover renv
        uses: r-lib/actions/setup-renv@v2          

      - name: Cache Renv packages 
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.R_LIBS_USER }}
            renv/library/R-*
            renv/cache/
          key: ${{ runner.os }}-r-${{ hashFiles('**/renv.lock') }}
          restore-keys: ${{ runner.os }}-r-

      - name: Render RMarkdown
        if: ${{ success() }}  # Only render if previous step succeeded
        run: |
          Rscript -e "rmarkdown::render('proy_proc_sel.Rmd')"

      - name: Remove desktop.ini files
        run: |
          Rscript -e "
          folder_path <- './';
          files <- list.files(folder_path, recursive = TRUE, full.names = TRUE);
          for (file in files) {
            if (tolower(basename(file)) == 'desktop.ini') {
              tryCatch({
                file.remove(file);
                print(paste('Deleted', file));
              }, error = function(e) {
                print(paste('Error deleting', file, ':', e$message));
              });
            }
          }
          "
          
      - name: Commit and Push Changes
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          git add .
          git commit -m "Update renv.lock and rendered content [skip ci]" --allow-empty
          git push -f
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
